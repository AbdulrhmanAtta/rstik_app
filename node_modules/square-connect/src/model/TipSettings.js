/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 */
var ApiClient = require('../ApiClient');




/**
 * The TipSettings model module.
 * Note: This model is in beta.
 * @module model/TipSettings
 */

/**
 * Constructs a new <code>TipSettings</code>.
 * 
 * @alias module:model/TipSettings
 * @class
 */
var exports = function() {
  var _this = this;




};

/**
 * Constructs a <code>TipSettings</code> from a plain JavaScript object, optionally creating a new instance.
 * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
 * @param {Object} data The plain JavaScript object bearing properties of interest.
 * @param {module:model/TipSettings} obj Optional instance to populate.
 * @return {module:model/TipSettings} The populated <code>TipSettings</code> instance.
 */
exports.constructFromObject = function(data, obj) {
  if (data) {
    obj = obj || new exports();

      if (data.hasOwnProperty('allow_tipping')) {
      obj['allow_tipping'] = ApiClient.convertToType(data['allow_tipping'], 'Boolean');
    }
      if (data.hasOwnProperty('separate_tip_screen')) {
      obj['separate_tip_screen'] = ApiClient.convertToType(data['separate_tip_screen'], 'Boolean');
    }
      if (data.hasOwnProperty('custom_tip_field')) {
      obj['custom_tip_field'] = ApiClient.convertToType(data['custom_tip_field'], 'Boolean');
    }
    }
  return obj;
}

/**
 * Indicates whether tipping is enabled for this checkout. Defaults to false.
 * @member {Boolean} allow_tipping
 */
exports.prototype['allow_tipping'] = undefined;
/**
 * Indicates whether tip options should be presented on their own screen before presenting the signature screen during card payment. Defaults to false.
 * @member {Boolean} separate_tip_screen
 */
exports.prototype['separate_tip_screen'] = undefined;
/**
 * Indicates whether custom tip amounts are allowed during the checkout flow. Defaults to false.
 * @member {Boolean} custom_tip_field
 */
exports.prototype['custom_tip_field'] = undefined;



module.exports = exports;



