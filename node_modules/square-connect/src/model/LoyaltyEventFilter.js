/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 */
var ApiClient = require('../ApiClient');
var LoyaltyEventDateTimeFilter = require('./LoyaltyEventDateTimeFilter');
var LoyaltyEventLocationFilter = require('./LoyaltyEventLocationFilter');
var LoyaltyEventLoyaltyAccountFilter = require('./LoyaltyEventLoyaltyAccountFilter');
var LoyaltyEventOrderFilter = require('./LoyaltyEventOrderFilter');
var LoyaltyEventTypeFilter = require('./LoyaltyEventTypeFilter');




/**
 * The LoyaltyEventFilter model module.
 * Note: This model is in beta.
 * @module model/LoyaltyEventFilter
 */

/**
 * Constructs a new <code>LoyaltyEventFilter</code>.
 * The filtering criteria. If the request specifies multiple filters,  the endpoint uses a logical AND to evaluate them.
 * @alias module:model/LoyaltyEventFilter
 * @class
 */
var exports = function() {
  var _this = this;






};

/**
 * Constructs a <code>LoyaltyEventFilter</code> from a plain JavaScript object, optionally creating a new instance.
 * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
 * @param {Object} data The plain JavaScript object bearing properties of interest.
 * @param {module:model/LoyaltyEventFilter} obj Optional instance to populate.
 * @return {module:model/LoyaltyEventFilter} The populated <code>LoyaltyEventFilter</code> instance.
 */
exports.constructFromObject = function(data, obj) {
  if (data) {
    obj = obj || new exports();

      if (data.hasOwnProperty('loyalty_account_filter')) {
      obj['loyalty_account_filter'] = LoyaltyEventLoyaltyAccountFilter.constructFromObject(data['loyalty_account_filter']);
    }
      if (data.hasOwnProperty('type_filter')) {
      obj['type_filter'] = LoyaltyEventTypeFilter.constructFromObject(data['type_filter']);
    }
      if (data.hasOwnProperty('date_time_filter')) {
      obj['date_time_filter'] = LoyaltyEventDateTimeFilter.constructFromObject(data['date_time_filter']);
    }
      if (data.hasOwnProperty('location_filter')) {
      obj['location_filter'] = LoyaltyEventLocationFilter.constructFromObject(data['location_filter']);
    }
      if (data.hasOwnProperty('order_filter')) {
      obj['order_filter'] = LoyaltyEventOrderFilter.constructFromObject(data['order_filter']);
    }
    }
  return obj;
}

/**
 * Filter events by loyalty account.
 * @member {module:model/LoyaltyEventLoyaltyAccountFilter} loyalty_account_filter
 */
exports.prototype['loyalty_account_filter'] = undefined;
/**
 * Filter events by event type.
 * @member {module:model/LoyaltyEventTypeFilter} type_filter
 */
exports.prototype['type_filter'] = undefined;
/**
 * Filter events by date time range.  For each range, the start time is inclusive and the end time  is exclusive.
 * @member {module:model/LoyaltyEventDateTimeFilter} date_time_filter
 */
exports.prototype['date_time_filter'] = undefined;
/**
 * Filter events by location.
 * @member {module:model/LoyaltyEventLocationFilter} location_filter
 */
exports.prototype['location_filter'] = undefined;
/**
 * Filter events by the order associated with the event.
 * @member {module:model/LoyaltyEventOrderFilter} order_filter
 */
exports.prototype['order_filter'] = undefined;



module.exports = exports;



